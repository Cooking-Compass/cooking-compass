// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // for local development
  url      = env("DATABASE_URL")
  // for Vercel
  // url       = env("POSTGRES_PRISMA_URL")
  // directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Role {
  USER
  ADMIN
}

enum Condition {
  EXCELLENT
  GOOD
  FAIR
  POOR
}

model User {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  password    String
  role        Role     @default(USER)
  recipes     Recipe[] // Relation: A user can have many recipes
  stuff       Stuff[]  // Relation: A user can own many stuff items
}

model Recipe {
  id           Int      @id @default(autoincrement())
  name         String
  ingredients  String
  instructions String
  image        String
  description  String
  ownerId      Int      // Foreign key to User
  owner        User     @relation(fields: [ownerId], references: [id])
  createdAt    DateTime @default(now())
}

model Stuff {
  id          Int        @id @default(autoincrement())
  name        String
  quantity    Int
  condition   Condition   @default(GOOD)
  ownerId     Int         // Foreign key to User
  owner       User        @relation(fields: [ownerId], references: [id])
}
